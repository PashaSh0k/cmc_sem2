Microsoft (R) Macro Assembler Version 6.14.8444		    05/14/21 22:25:03
u2.asm							     Page 1 - 1


				comment *
				-------------------------------------------------------------------
				ВЫХОД-5 (Задача_2, вспомогательный модуль) 
				-------------------------------------------------------------------
				*

				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; Исключение из списка служебных слов
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 

				public In_text, Out_text, Find_min_word 

 00000000			.code
				;-----------------------------------------------------------------------
				; procedure In_word(var Elem_of_Arr: array of byte; K: longword)
				;-----------------------------------------------------------------------
				; Действие: ввод слова из К букв, преобразование его к верхнему регистру
				; и сохранение этого слова по адресу, заданному параметром Elem_of_Array.
				; Перед окончанием работы процедура In_word  "чистит" буфер ввода 
				; (макрокомандой flush) от управляющих символов, попавших в буфер в 
				; результате нажатия клавиши ENTER (сделать это обязательно, иначе дальнейший 
				; ввод будет осуществялться некорректно !!!). 
				;-----------------------------------------------------------------------
 00000000			In_word proc
 00000000  55			    push EBP
 00000001  8B EC		    mov EBP, ESP
 00000003  50			    push EAX
 00000004  51			    push ECX
 00000005  52			    push EDX
 00000006  53			    push EBX
				    
 00000007  8B 45 08		    mov EAX, [EBP+8]    ; in EAX address Elem_of_Arr
 0000000A  8B 4D 0C		    mov ECX, [EBP+12]   ; in ECX K
 0000000D  BA 00000000		    mov EDX, 0
				    
 00000012			@L1:
				    inchar BL
 00000033  80 FB 60		    cmp BL, 01100000b
 00000036  72 03		    jB @no
 00000038  80 EB 20		    sub BL, 00100000b
 0000003B			@no:
 0000003B  88 1C 02		    mov [EAX+EDX], BL
 0000003E  42			    inc EDX
 0000003F  3B D1		    cmp EDX, ECX
 00000041  76 CF		    jBE @L1
				    flush
 00000060  5B			    pop EBX
 00000061  5A			    pop EDX
 00000062  59			    pop ECX
 00000063  58			    pop EAX
 00000064  5D			    pop EBP
 00000065  C2 0008		    ret 4*2
 00000068			In_word endp

				;-----------------------------------------------------------------------
				; procedure Out_word(var Elem_of_Arr: array of byte; K: longword)
				;-----------------------------------------------------------------------
				; Действие: вывод слова из К букв, адрес начала слова задан 
				; параметром Elem_of_Arr. 
				;-----------------------------------------------------------------------
 00000068			Out_word proc
 00000068  55			    push EBP
 00000069  8B EC		    mov EBP, ESP
 0000006B  50			    push EAX
 0000006C  51			    push ECX
 0000006D  52			    push EDX
 0000006E  53			    push EBX
				    
 0000006F  8B 45 08		    mov EAX, [EBP+8]    ; in EAX address Elem_of_Arr
 00000072  8B 4D 0C		    mov ECX, [EBP+12]   ; in ECX K
 00000075  BA 00000000		    mov EDX, 0
 0000007A			@L1:
 0000007A  8A 1C 02		    mov BL, [EAX+EDX]
				    outchar BL
 000000E1  42			    inc EDX
 000000E2  E2 96		    loop @L1
				    
 000000E4  5B			    pop EBX
 000000E5  5A			    pop EDX
 000000E6  59			    pop ECX
 000000E7  58			    pop EAX
 000000E8  5D			    pop EBP
 000000E9  C2 0008		    ret 4*2
 000000EC			Out_word endp

				;-----------------------------------------------------------------------
				; procedure In_text(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; Действие: ввод последовательности из N слов (по К букв в каждом слове), 
				; преобразование слов к верхн.регистру и сохранение их в массиве Arr_of_words.
				; В процессе работы процедура In_text обращается к вспомогательной процедуре
				; In_word для ввода очередного слова и сохранения его в очередном элементе 
				; массива Arr_of_words
				;-----------------------------------------------------------------------
 000000EC			In_text proc
 000000EC  55			    push EBP
 000000ED  8B EC		    mov EBP, ESP
 000000EF  50			    push EAX
 000000F0  51			    push ECX
 000000F1  53			    push EBX
 000000F2  52			    push EDX
 000000F3  56			    push ESI
				    
 000000F4  8B 45 08		    mov EAX, [EBP+8]
 000000F7  8B 4D 0C		    mov ECX, [EBP+12]   ; in ECX N
 000000FA  8B 5D 10		    mov EBX, [EBP+16]   ; in EBX K
 000000FD  BA 00000000		    mov EDX, 0
				    
 00000102			 @L:
 00000102  8D 34 02		    lea ESI, [EAX+EDX]
 00000105  53			    push EBX
 00000106  56			    push ESI
 00000107  E8 FFFFFEF4		    call In_word
 0000010C  03 D3		    add EDX, EBX
 0000010E  E2 F2		    loop @L
				    
 00000110  5E			    pop ESI
 00000111  5A			    pop EDX
 00000112  5B			    pop EBX
 00000113  59			    pop ECX
 00000114  58			    pop EAX
 00000115  5D			    pop EBP
 00000116  C2 000C		    ret 4*3
 00000119			In_text endp

				;-----------------------------------------------------------------------
				; procedure Out_text(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; Действие: вывод N слов (по К букв в каждом слове), каждое слово – с новой 
				; строки экрана. Адрес начала массива из слов задаётся параметром Arr_of_words.
				; В процессе работы процедура Out_text обращается к вспомогательной процедуре
				; Out_word для вывода очередного слова
				;-----------------------------------------------------------------------
 00000119			Out_text proc
 00000119  55			    push EBP
 0000011A  8B EC		    mov EBP, ESP
 0000011C  50			    push EAX
 0000011D  51			    push ECX
 0000011E  53			    push EBX
 0000011F  52			    push EDX
 00000120  56			    push ESI
				    
 00000121  8B 45 08		    mov EAX, [EBP+8]
 00000124  8B 4D 0C		    mov ECX, [EBP+12]   ; in ECX N
 00000127  8B 5D 10		    mov EBX, [EBP+16]   ; in EBX K
 0000012A  BA 00000000		    mov EDX, 0
 0000012F			 @L:
 0000012F  8D 34 02		    lea ESI, [EAX+EDX]
 00000132  53			    push EBX
 00000133  56			    push ESI
 00000134  E8 FFFFFF2F		    call Out_word
 00000139  03 D3		    add EDX, EBX
				    newline
 000001A7  E2 86		    loop @L    
				    
 000001A9  5E			    pop ESI
 000001AA  5A			    pop EDX
 000001AB  5B			    pop EBX
 000001AC  59			    pop ECX
 000001AD  58			    pop EAX
 000001AE  5D			    pop EBP
 000001AF  C2 000C		    ret 4*3
 000001B2			Out_text endp	

				;-----------------------------------------------------------------------		
				; procedure Find_min_word(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; Действие: поиск слова (в массиве Arr_of_words), которое лексикографически 
				; предшествует всем остальным словам и вывод найденного слова на экран.
				; Адрес начала массива из N слов (каждое слово длиной К букв) задаётся 
				; параметром Arr_of_words.
				; В процессе своей работы процедура Find_min_word обращается к вспомогательной
				; процедуре Out_word для вывода найденного слова.
				;-----------------------------------------------------------------------  
 000001B2			Find_min_word proc
 000001B2  55			    push EBP
 000001B3  8B EC		    mov EBP, ESP
 000001B5  50			    push EAX
 000001B6  51			    push ECX
 000001B7  52			    push EDX
 000001B8  56			    push ESI
 000001B9  57			    push EDI
 000001BA  53			    push EBX
				    
 000001BB  8B 45 08		    mov EAX, [EBP+8]
 000001BE  8B 55 0C		    mov EDX, [EBP+12]       ; N
 000001C1  8B 4D 10		    mov ECX, [EBP+16]       ; K
 000001C4  4A			    dec EDX
 000001C5  FC			    CLD
				    
 000001C6  8B F8		    mov EDI, EAX
 000001C8			 @L:
 000001C8  03 F9		    add EDI, ECX
 000001CA  8B F0		    mov ESI, EAX
 000001CC  57			    push EDI
 000001CD  51			    push ECX
 000001CE  F3/ A6		repE cmpsb
 000001D0  59			    pop ECX
 000001D1  5F			    pop EDI
 000001D2  76 02		    jBE @F
 000001D4  8B C7		    mov EAX, EDI
 000001D6  4A			@@: dec EDX
 000001D7  75 EF		    jNZ @L
				    
 000001D9  51			    push ECX
 000001DA  50			    push EAX
 000001DB  E8 FFFFFE88		    call Out_word
				    
 000001E0  5B			    pop EBX
 000001E1  5F			    pop EDI
 000001E2  5E			    pop ESI
 000001E3  5A			    pop EDX
 000001E4  59			    pop ECX
 000001E5  58			    pop EAX
 000001E6  5D			    pop EBP
 000001E7  C2 000C		    ret 4*3
 000001EA			Find_min_word endp			
				;-----------------------------------------------------------------------
					
				end
Microsoft (R) Macro Assembler Version 6.14.8444		    05/14/21 22:25:03
u2.asm							     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000283 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001EA Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Find_min_word  . . . . . . . . .	P Near	 000001B2 _TEXT	Length= 00000038 Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 000001C8 _TEXT	
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
In_text  . . . . . . . . . . . .	P Near	 000000EC _TEXT	Length= 0000002D Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 00000102 _TEXT	
In_word  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000068 Public STDCALL
  @L1  . . . . . . . . . . . . .	L Near	 00000012 _TEXT	
  ??0002 . . . . . . . . . . . .	L Near	 0000001D _TEXT	
  @no  . . . . . . . . . . . . .	L Near	 0000003B _TEXT	
  ??0004 . . . . . . . . . . . .	L Near	 00000047 _TEXT	
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Out_text . . . . . . . . . . . .	P Near	 00000119 _TEXT	Length= 00000099 Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 0000012F _TEXT	
  ??0016 . . . . . . . . . . . .	L Near	 0000015A _TEXT	
  ??0017 . . . . . . . . . . . .	L Near	 00000190 _TEXT	
Out_word . . . . . . . . . . . .	P Near	 00000068 _TEXT	Length= 00000084 Public STDCALL
  @L1  . . . . . . . . . . . . .	L Near	 0000007A _TEXT	
  ??000C . . . . . . . . . . . .	L Near	 00000098 _TEXT	
  ??000D . . . . . . . . . . . .	L Near	 000000CE _TEXT	
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Number	 00000001h   
??0001 . . . . . . . . . . . . .	Byte	 00000019 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 0000001B _DATA	
??0005 . . . . . . . . . . . . .	Number	 00000001h   
??0006 . . . . . . . . . . . . .	Byte	 0000001C _DATA	
??0008 . . . . . . . . . . . . .	Byte	 0000014B _DATA	
??0009 . . . . . . . . . . . . .	Byte	 0000001F _DATA	
??000A . . . . . . . . . . . . .	Text   	 o
??000B . . . . . . . . . . . . .	Byte	 0000001E _DATA	
??000E . . . . . . . . . . . . .	Byte	 0000014E _DATA	
??000F . . . . . . . . . . . . .	Number	 00000000h   
??0010 . . . . . . . . . . . . .	Byte	 00000151 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00000280 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00000154 _DATA	
??0014 . . . . . . . . . . . . .	Text   	 o
??0015 . . . . . . . . . . . . .	Byte	 00000153 _DATA	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Pause  . . . . . . . . . . . . .	Text   	 pause
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
