; 
; Аксенов Павел 110 группа

comment ~

c-p 14   (max = 60 очков)
Написать программу, состоящую из ДВУХ МОДУЛЕЙ.

В ГОЛОВНОМ МОДУЛЕ должны быть описаны: 
1) числовая константа с именем K и значением из диапазона [1..31]
  (использовать в программе для определённости значение 29); 
2) строка S для вывода сообщения ‘Undivisible’; 
3) двойное слово с именем D (без начального значения); 
4) байт с именем B (без начального значения). 

Во ВСПОМОГАТЕЛЬНОМ МОДУЛЕ должна быть описана процедура IsDivided 
без параметров (и без стандартных соглашений о связи) - подробности
про эту процедуру - см. ниже.

ГОЛОВНОЙ МОДУЛЬ  вводит  значение  ОТЛИЧНОЙ ОТ НУЛЯ беззнаковой  
переменной D (по макрокоманде inint), а затем передаёт управление 
во ВСПОМОГАТЕЛЬНЫЙ МОДУЛЬ на процедуру IsDivided, которая по результатам
проверки величины D должна сформировать значение байта В. Затем ГОЛОВНОЙ 
МОДУЛЬ печатает  полученное значение байта В и на этом завершает свою
работу.

Подробности про процедуру IsDivide.
Процедура, в случае, если величина D делится на 2^K нацело, 
а значение (D div (2^K)) при этом помещается в формат байта, должна 
присвоить это значение переменной B.
Во всех остальных случаях (не делится; делится, но при этом не помещается
в байт) процедура должна присвоить переменной В значение 0 и напечатать 
текст, заданный в строке S.
Внимание! Процедура IsDivided не имеет параметров и работает напрямую  
с переменными D, B, S и константой К (по их именам). 

Разъяснение: запись "2^K" обозначает "два в степени К".

Требование к реализации: не использовать арифметических команд. 

~

; (unit_sername.asm) Вспомогательный модуль
; далее ваше решение
include console.inc

public IsDivided
extern K: abs, S: byte, D: dword, B: byte, Return: near

.code
IsDivided proc
    push EAX
    push EDX
    push ECX
    push EBX
    
    xor EDX, EDX
    mov EAX, D
    mov ECX, K
  L:
    SHR EAX, 1
    jc no
    loop L
    
    mov EBX, EAX
    and EAX, 11111111b
    cmp EBX, EAX
    jne no
    
    mov B, AL
    jmp Return
 
 no:
    mov B, 0
    outstrln offset S
    
    pop EBX
    pop ECX
    pop EDX
    pop EAX
IsDivided endp
exit
end

; конец вашего решения