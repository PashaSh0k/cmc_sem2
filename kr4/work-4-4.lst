Microsoft (R) Macro Assembler Version 6.14.8444		    05/10/21 22:18:24
work-4-4.asm						     Page 1 - 1


				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; Исключение из списка служебных слов
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 
				; (ТЕСТЫ ДЛЯ ЭТАПОВ 1,2,3 -  в конце этой программы)
				; ОПИСАНИЕ ТИПОВ (ЗАПИСИ) И (СТРУКТУРЫ):
				; Внимание, нельзя вносить изменения в описания типов и переменных: 
				Date_pack record D:5, M:4, Y:7
 00000003			Date_unpack struc  ; дата в рамках некоторого столетия
 00000000  00			D   db ?           ; день (от 1 до 31)
 00000001  00			M   db ?           ; месяц (от 1 до 12)
 00000002  00			Y   db ?           ; год (от 0 до 99)
				Date_unpack ends

				; ОПИСАНИЕ ПЕРЕМЕННЫХ:
 00000019			.data
 00000019 20 C0 EA F1 E5	T   db " Аксенов Павел    ЭТАП_1 (выход-4)",0	;	
	   ED EE E2 20 CF
	   E0 E2 E5 EB 20
	   20 20 20 DD D2
	   C0 CF 5F 31 20
	   28 E2 FB F5 EE
	   E4 2D 34 29 00
 = 00000006			N   equ 6
 0000003C 0000			D1  Date_pack <>                    ; упакованная дата_1
 0000003E 0000			D2  Date_pack <>                    ; упакованная дата_2
 00000040  00000006 [		Arr_of_Rec Date_pack N dup (<>)     ; массив записей (упакованных дат)
	    0000
	   ] 0000 0000
	   0000 0000 0000
 0000004C  00000006 [		Arr_of_Struc Date_unpack N dup (<>) ; массив структур (распакованных дат)
	    00 00 00
	   ]

				; ОПИСАНИЕ ПРОЦЕДУР: 
 00000000			.code
				; -----------------------------------------------------
				; procedure In_Rec(var D: Date_pack)
				; действие: ввод значений полей D, M, Y записи типа Date_pack
 00000000			In_Rec proc
 00000000  55			    push EBP
 00000001  8B EC		    mov EBP, ESP
 00000003  50			    push EAX
 00000004  53			    push EBX
				    
 00000005  8B 45 08		    mov EAX, [EBP+8]
				    inint BX
 00000017  66| C1 E3 0B		    shl BX, D
 0000001B  66| 09 18		    or [EAX], BX
				    inint BX
 0000002D  66| C1 E3 07		    shl BX, M
 00000031  66| 09 18		    or [EAX], BX
				    inint BX
 00000043  66| 09 18		    or [EAX], BX
				    
 00000046  5B			    pop EBX
 00000047  58			    pop EAX
 00000048  5D			    pop EBP
 00000049  C2 0004		    ret 4
 0000004C			In_Rec endp
				; -----------------------------------------------------
				; function Less(D1, D2: Date_pack): byte
				; AL := 1 (если D1<D2, т.е. если дата_1 предшествует дате_2)
				; AL := 0 (иначе)
 0000004C			Less proc
 0000004C  55			    push EBP
 0000004D  8B EC		    mov EBP, ESP
 0000004F  53			    push EBX
 00000050  51			    push ECX
 00000051  57			    push EDI
 00000052  56			    push ESI
				    
 00000053  8B 5D 08		    mov EBX, [EBP+8]        ; D1
 00000056  8B 4D 0C		    mov ECX, [EBP+12]       ; D2
 00000059  8B FB		    mov EDI, EBX
 0000005B  8B F1		    mov ESI, ECX
 0000005D  83 E3 7F		    and EBX, mask Y
 00000060  83 E1 7F		    and ECX, mask Y
 00000063  3B D9		    cmp EBX, ECX
 00000065  7C 2A		    jL yes
 00000067  77 2C		    jA no
 00000069  8B DF		    mov EBX, EDI
 0000006B  8B CE		    mov ECX, ESI
 0000006D  81 E3 00000780	    and EBX, mask M
 00000073  81 E1 00000780	    and ECX, mask M
 00000079  3B D9		    cmp EBX, ECX
 0000007B  7C 14		    jL yes
 0000007D  77 16		    jA no
 0000007F  81 E7 0000F800	    and EDI, mask D
 00000085  81 E6 0000F800	    and ESI, mask D
 0000008B  3B FE		    cmp EDI, ESI
 0000008D  7C 02		    jL yes
 0000008F  EB 04		    jmp no
				    
 00000091			yes:
 00000091  B0 01		    mov AL, 1
 00000093  EB 02		    jmp fin
 00000095			no:
 00000095  B0 00		    mov AL, 0
 00000097			fin:
 00000097  5E			    pop ESI
 00000098  5F			    pop EDI
 00000099  59			    pop ECX
 0000009A  5B			    pop EBX
 0000009B  5D			    pop EBP
 0000009C  C2 0008		    ret 4*2
 0000009F			Less endp
				; -----------------------------------------------------
				; procedure Out_Rec(D: Date_pack)
				; действие: вывод значений полей D, M, Y записи типа Date_pack
 0000009F			Out_Rec proc
 0000009F  55			    push EBP
 000000A0  8B EC		    mov EBP, ESP
 000000A2  53			    push EBX
 000000A3  51			    push ECX
				    
 000000A4  8B 5D 08		    mov EBX, [EBP+8]
 000000A7  8B CB		    mov ECX, EBX
 000000A9  81 E3 0000F800	    and EBX, mask D
 000000AF  C1 EB 0B		    shr EBX, D
				    outword EBX
				    outchar '.'
 0000012F  8B D9		    mov EBX, ECX
 00000131  81 E3 00000780	    and EBX, mask M
 00000137  C1 EB 07		    shr EBX, M
				    outword EBX
				    outchar '.'
 000001B7  83 E1 7F		    and ECX, mask Y
				    outword ECX
				    
 000001D3  59			    pop ECX
 000001D4  5B			    pop EBX
 000001D5  5D			    pop EBP
 000001D6  C2 0004		    ret 4
 000001D9			Out_Rec endp
				; -----------------------------------------------------
				; function Min_Date(var Arr: array of Date_pack; N: longword): word
				; действие: АХ := минимальная дата среди элементов-дат массива Arr
				; (минимальная - предшествующая всем остальным датам)
				; Функция Min_Date в процессе своей работы для сравнения текущего минимума 
				; с очередной датой обращается к ранее отлаженной функции Less(D1,D2)
 000001D9			Min_Date proc
 000001D9  55			    push EBP
 000001DA  8B EC		    mov EBP, ESP
 000001DC  53			    push EBX
 000001DD  51			    push ECX
 000001DE  52			    push EDX
 000001DF  57			    push EDI
 000001E0  56			    push ESI
				    
 000001E1  8B 5D 08		    mov EBX, [EBP+8]
 000001E4  8B 4D 0C		    mov ECX, [EBP+12]
 000001E7  66| 8B 13		    mov DX, [EBX]
 000001EA  49			    dec ECX
 000001EB  BF 00000001		    mov EDI, 1
 000001F0			cycle:
 000001F0  0F B7 D2		    movzx EDX, DX
 000001F3  66| 8B 34 7B		    mov SI, word ptr [EBX+EDI*(type Date_pack)]
 000001F7  0F B7 F6		    movzx ESI, SI
 000001FA  56			    push ESI
 000001FB  52			    push EDX
 000001FC  E8 FFFFFE4B		    call Less
 00000201  3C 00		    cmp AL, 0
 00000203  75 04		    jNE LL
 00000205  66| 8B 14 7B		    mov DX, [EBX+EDI*(type Date_pack)]
 00000209  47			LL: inc EDI
 0000020A  E2 E4		    loop cycle
				    
 0000020C  66| 8B C2		    mov AX, DX
 0000020F  5E			    pop ESI
 00000210  5F			    pop EDI
 00000211  5A			    pop EDX
 00000212  59			    pop ECX
 00000213  5B			    pop EBX
 00000214  5D			    pop EBP
 00000215  C2 0008		    ret 4*2
 00000218			Min_Date endp
				; -----------------------------------------------------
				; procedure Rec_to_Struс(D_pack: Date_pack; var D_unpack: Date_unpack)
				; действие: распаковка даты 
				; (из записи типа Date_pack в структуру типа Date_unpack)
 00000218			Rec_to_Struc proc
 00000218  55			    push EBP
 00000219  8B EC		    mov EBP, ESP
 0000021B  50			    push EAX
 0000021C  53			    push EBX
				    
 0000021D  8B 45 08		    mov EAX, [EBP+8]
 00000220  8B 5D 0C		    mov EBX, [EBP+12]
 00000223  66| C1 E8 0B		    shr AX, D
 00000227  88 03		    mov (Date_unpack ptr [EBX]).D, AL
 00000229  8B 45 08		    mov EAX, [EBP+8]
 0000022C  66| 25 0780		    and AX, mask M
 00000230  66| C1 E8 07		    shr AX, M
 00000234  88 43 01		    mov (Date_unpack ptr [EBX]).M, AL
 00000237  8B 45 08		    mov EAX, [EBP+8]
 0000023A  66| 83 E0 7F		    and AX, mask Y
 0000023E  88 43 02		    mov (Date_unpack ptr [EBX]).Y, AL
				    
 00000241  5B			    pop EBX
 00000242  58			    pop EAX
 00000243  5D			    pop EBP
 00000244  C2 0008		    ret 4*2
 00000247			Rec_to_Struc endp
				; -----------------------------------------------------
				; procedure Out_Struc(var D: Date_unpack)
				; действие: вывод значений полей D, M, Y структуры типа Date_unpack
 00000247			Out_Struc proc
 00000247  55			    push EBP
 00000248  8B EC		    mov EBP, ESP
 0000024A  50			    push EAX
				    
 0000024B  8B 45 08		    mov EAX, [EBP+8]
				    outword (Date_unpack ptr [EAX]).D
				    outchar '.'
				    outword (Date_unpack ptr [EAX]).M
				    outchar '.'
				    outword (Date_unpack ptr [EAX]).Y
				    outchar ' '
				    
 000003CA  58			    pop EAX
 000003CB  5D			    pop EBP
 000003CC  C2 0004		    ret 4
 000003CF			Out_Struc endp
				; -----------------------------------------------------
				; ВЕДУЩАЯ ЧАСТЬ (ОСНОВНАЯ ПРОГРАММА):
 000003CF			start:	
				    ConsoleTitle offset T	
				; ----------------------------------------------------- 
				COMMENT ~
				; ЭТАП 1 (40 очков):
				; (10 очков) ввод двух дат D1 и D2 (каждая в формате dd.mm.yy)
				; решение:
				    lea EAX, D1
				    push EAX
				    call In_Rec
				    lea EAX, D2
				    push EAX
				    call In_Rec
				; (20 очков) сравнение двух дат (D1 < D2 ?)
				; решение:
				    movzx EAX, D1
				    movzx EBX, D2
				    push EBX
				    push EAX
				    call Less
				; (10 очков) вывод результата сравнения в виде "D1<D2 is true/false",
				; где вместо D1 и D2 должна быть напечатана дата в формате dd.mm.yy
				; решение:
				    movzx EBX, D1
				    push EBX
				    call Out_Rec
				    outchar 60
				    movzx EBX, D2
				    push EBX
				    call Out_Rec
				    cmp AL, 0
				    je null
				    outstr ' is true'
				    jmp et2
				null:
				    outstr ' is false'
				et2:
				~
				; ----------------------------------------------------- 
				; ЭТАП 2 (50 очков):
				; (15 очков) цикл для ввода N дат и сохранения их в массиве Arr_of_Rec:
				; решение:
 00000421  B9 00000000		    mov ECX, 0
 00000426  83 F9 06		L:  cmp ECX, N
 00000429  74 10		    jE con
 0000042B  8D 04 4D		    lea EAX, Arr_of_Rec[ECX*type Date_pack]
	   00000040 R
 00000432  50			    push EAX
 00000433  E8 FFFFFBC8		    call In_Rec
 00000438  41			    inc ECX
 00000439  EB EB		    jmp L 
 0000043B			con:
				; (15 очков) цикл для вывода N дат, хранящихся в массиве Arr_of_Rec
				; решение:
 0000043B  B9 00000000		    mov ECX, 0
 00000440  83 F9 06		L1: cmp ECX, N
 00000443  74 75		    jE ffin
 00000445  0F B7 04 4D		    movzx EAX, Arr_of_Rec[ECX*type Date_pack]
	   00000040 R
 0000044D  50			    push EAX
 0000044E  E8 FFFFFC4C		    call Out_Rec
				    outchar ' '
 000004B7  41			    inc ECX
 000004B8  EB 86		    jmp L1
 000004BA			ffin:
				; (20 очков) цикл для проверки упорядочены ли элементы-даты по возрастанию
				; решение:
				    newline
 00000526  B0 01		    mov AL, 1
 00000528  B9 00000000		    mov ECX, 0
 0000052D  BA 00000001		    mov EDX, 1
 00000532			L2:
 00000532  3C 01		    cmp AL, 1
 00000534  75 20		    jNE noo
 00000536  0F B7 34 4D		    movzx ESI, word ptr Arr_of_Rec[ECX*(type Date_pack)]
	   00000040 R
 0000053E  0F B7 3C 55		    movzx EDI, word ptr Arr_of_Rec[EDX*(type Date_pack)]
	   00000040 R
 00000546  57			    push EDI
 00000547  56			    push ESI
 00000548  E8 FFFFFAFF		    call Less
 0000054D  41			    inc ECX
 0000054E  42			    inc EDX
 0000054F  83 F9 06		    cmp ECX, N
 00000552  74 42		    jE yess
 00000554  EB DC		    jmp L2
				    
 00000556			noo:
				    outstr 'not sorted'
 00000594  EB 3E		    jmp fffin
 00000596			yess:
				    outstr 'sorted'
 000005D4			fffin:
				        

				; ----------------------------------------------------- 
				; ЭТАП 3 (40 очков):
				; применение функции Min_Date для поиска наименьшей даты в массиве Arr_of_Rec
				; решение:
 000005D4  BB 00000006		    mov EBX, N
 000005D9  53			    push EBX
 000005DA  8D 05 00000040 R	    lea EAX, Arr_of_Rec
 000005E0  50			    push EAX
 000005E1  E8 FFFFFBF3		    call Min_Date

				; вывод наименьшей даты в виде "dd.mm.yy is minimum"
				; решение:
				    newline
 00000652  0F B7 D8		    movzx EBX, AX
 00000655  53			    push EBX
 00000656  E8 FFFFFA44		    call Out_Rec
				    outstr ' is minimum'
				; ----------------------------------------------------- 
				; ЭТАП 4 (60 очков):
				; (30 очков) цикл движения по массиву Arr_of_Rec с целью распаковки дат 
				; и сохранения их в массиве структур  Arr_of_Struc
				; решение:
				    newline
 00000705  B9 00000000		    mov ECX, 0
 0000070A			 L4:
 0000070A  83 F9 06		    cmp ECX, N
 0000070D  74 19		    je f4
 0000070F  8D 84 49		    lea EAX, Arr_of_Struc[ECX*2+ECX]
	   0000004C R
 00000716  0F B7 1C 4D		    movzx EBX, Arr_of_Rec[ECX*(type Date_pack)]
	   00000040 R
 0000071E  50			    push EAX
 0000071F  53			    push EBX
 00000720  E8 FFFFFAF3		    call Rec_to_Struc
 00000725  41			    inc ECX
 00000726  EB E2		    jmp L4
 00000728			  f4:

				; (30 очков) цикл движения по массиву Arr_of_Struc с целью вывода дат 
				; на экран (каждую дату - в формате dd.mm.yy)
				; решение
 00000728  B9 00000000		    mov ECX, 0
 0000072D			L41:
 0000072D  83 F9 06		    cmp ECX, N
 00000730  74 10		    je ff4
 00000732  8D 84 49		    lea EAX, Arr_of_Struc[ECX*2+ECX]
	   0000004C R
 00000739  50			    push EAX
 0000073A  E8 FFFFFB08		    call Out_Struc
 0000073F  41			    inc ECX
 00000740  EB EB		    jmp L41
 00000742			ff4:
				; ----------------------------------------------------- 
					
					pause
					exit
					end start
					
				ТЕСТЫ, на которых надо сдавать программу:
				---------------------------------------------------------
				ЭТАП 1
				---------------------------------------------------------
				1)  10.2.20 13.2.20	   ===>   10.2.20<13.2.20 is true
				2)  20.2.20 10.3.20	   ===>   20.2.20<10.3.20 is true  
				3)  15.2.20 10.2.21	   ===>   15.2.20<10.2.21 is true  
				4)  1.2.3 1.2.3	       ===>   1.2.3<1.2.3 is false
				5)  10.2.20 15.1.20	   ===>   10.2.20<15.1.20 is false
				6)  9.2.20 10.2.19	   ===>   9.2.20<10.2.19 is false
				---------------------------------------------------------
				ЭТАП 2
				---------------------------------------------------------
				1)  10.2.19 13.2.19 13.3.19 14.3.19 14.3.20 15.4.20	===> sorted
				2)  10.2.19 13.2.19 13.3.19 13.3.19 14.3.20 15.4.2	===> not sorted
				3)  10.2.19 13.2.19 13.3.19 14.3.19 14.3.18 15.4.20	===> not sorted
				4)  10.2.19 13.2.19 13.3.19 14.3.19 14.3.20 13.3.20	===> not sorted
				---------------------------------------------------------
				ЭТАП 3
				---------------------------------------------------------
				1)  15.4.20 14.3.19 10.2.19 13.3.19 14.3.20 13.2.19 ===> 10.2.19 is minimum  
				2)  15.4.20 14.3.20 14.3.19 13.3.19 13.2.19 10.2.19 ===> 10.2.19 is minimum
				3)  10.2.19 15.4.20 14.3.19 14.3.20 13.2.19 13.3.19 ===> 10.2.19 is minimum
				---------------------------------------------------------
Microsoft (R) Macro Assembler Version 6.14.8444		    05/10/21 22:18:24
work-4-4.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
Date_unpack  . . . . . . . . . .	 00000003
  D  . . . . . . . . . . . . . .	 00000000	 Byte
  M  . . . . . . . . . . . . . .	 00000001	 Byte
  Y  . . . . . . . . . . . . . .	 00000002	 Byte
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Records:

                N a m e                  Width     # fields
                                         Shift     Width     Mask      Initial

Date_pack  . . . . . . . . . . .	 00000010      00000003
  D  . . . . . . . . . . . . . .	 0000000B      00000005	     F800     ?
  M  . . . . . . . . . . . . . .	 00000007      00000004	     0780     ?
  Y  . . . . . . . . . . . . . .	 00000000      00000007	     007F     ?


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000DD3 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000007C7 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
In_Rec . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000004C Public STDCALL
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Less . . . . . . . . . . . . . .	P Near	 0000004C _TEXT	Length= 00000053 Public STDCALL
  yes  . . . . . . . . . . . . .	L Near	 00000091 _TEXT	
  no . . . . . . . . . . . . . .	L Near	 00000095 _TEXT	
  fin  . . . . . . . . . . . . .	L Near	 00000097 _TEXT	
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Min_Date . . . . . . . . . . . .	P Near	 000001D9 _TEXT	Length= 0000003F Public STDCALL
  cycle  . . . . . . . . . . . .	L Near	 000001F0 _TEXT	
  LL . . . . . . . . . . . . . .	L Near	 00000209 _TEXT	
Out_Rec  . . . . . . . . . . . .	P Near	 0000009F _TEXT	Length= 0000013A Public STDCALL
  ??001A . . . . . . . . . . . .	L Near	 000000E6 _TEXT	
  ??001B . . . . . . . . . . . .	L Near	 0000011C _TEXT	
  ??0030 . . . . . . . . . . . .	L Near	 0000016E _TEXT	
  ??0031 . . . . . . . . . . . .	L Near	 000001A4 _TEXT	
Out_Struc  . . . . . . . . . . .	P Near	 00000247 _TEXT	Length= 00000188 Public STDCALL
  ??0053 . . . . . . . . . . . .	L Near	 00000283 _TEXT	
  ??0054 . . . . . . . . . . . .	L Near	 000002B9 _TEXT	
  ??0069 . . . . . . . . . . . .	L Near	 00000302 _TEXT	
  ??006A . . . . . . . . . . . .	L Near	 00000338 _TEXT	
  ??007F . . . . . . . . . . . .	L Near	 00000381 _TEXT	
  ??0080 . . . . . . . . . . . .	L Near	 000003B7 _TEXT	
Rec_to_Struc . . . . . . . . . .	P Near	 00000218 _TEXT	Length= 0000002F Public STDCALL
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Number	 00000002h   
??0001 . . . . . . . . . . . . .	DWord	 0000005E _DATA	
??0002 . . . . . . . . . . . . .	Number	 00000002h   
??0003 . . . . . . . . . . . . .	DWord	 00000062 _DATA	
??0004 . . . . . . . . . . . . .	Number	 00000002h   
??0005 . . . . . . . . . . . . .	DWord	 00000066 _DATA	
??0006 . . . . . . . . . . . . .	Number	 00000001h   
??0007 . . . . . . . . . . . . .	Number	 00000002h   
??0008 . . . . . . . . . . . . .	Number	 00000000h   
??0009 . . . . . . . . . . . . .	Byte	 0000006A _DATA	
??0011 . . . . . . . . . . . . .	Number	 00000004h   
??0013 . . . . . . . . . . . . .	Number	 00000000h   
??0014 . . . . . . . . . . . . .	Byte	 0000006D _DATA	
??0016 . . . . . . . . . . . . .	Byte	 0000019C _DATA	
??0017 . . . . . . . . . . . . .	Byte	 00000070 _DATA	
??0018 . . . . . . . . . . . . .	Text   	 o
??0019 . . . . . . . . . . . . .	Byte	 0000006F _DATA	
??001C . . . . . . . . . . . . .	Number	 00000001h   
??001D . . . . . . . . . . . . .	Number	 00000002h   
??001E . . . . . . . . . . . . .	Number	 00000000h   
??001F . . . . . . . . . . . . .	Byte	 0000019F _DATA	
??0027 . . . . . . . . . . . . .	Number	 00000004h   
??0029 . . . . . . . . . . . . .	Number	 00000000h   
??002A . . . . . . . . . . . . .	Byte	 000001A2 _DATA	
??002C . . . . . . . . . . . . .	Byte	 000002D1 _DATA	
??002D . . . . . . . . . . . . .	Byte	 000001A5 _DATA	
??002E . . . . . . . . . . . . .	Text   	 o
??002F . . . . . . . . . . . . .	Byte	 000001A4 _DATA	
??0032 . . . . . . . . . . . . .	Number	 00000001h   
??0033 . . . . . . . . . . . . .	Number	 00000002h   
??0034 . . . . . . . . . . . . .	Number	 00000000h   
??0035 . . . . . . . . . . . . .	Byte	 000002D4 _DATA	
??003D . . . . . . . . . . . . .	Number	 00000004h   
??003F . . . . . . . . . . . . .	Number	 00000017h   
??0040 . . . . . . . . . . . . .	Number	 00000018h   
??0041 . . . . . . . . . . . . .	Number	 00000000h   
??0042 . . . . . . . . . . . . .	Byte	 000002D7 _DATA	
??004A . . . . . . . . . . . . .	Number	 00000001h   
??004C . . . . . . . . . . . . .	Number	 00000000h   
??004D . . . . . . . . . . . . .	Byte	 000002DA _DATA	
??004F . . . . . . . . . . . . .	Byte	 00000409 _DATA	
??0050 . . . . . . . . . . . . .	Byte	 000002DD _DATA	
??0051 . . . . . . . . . . . . .	Text   	 o
??0052 . . . . . . . . . . . . .	Byte	 000002DC _DATA	
??0055 . . . . . . . . . . . . .	Number	 00000017h   
??0056 . . . . . . . . . . . . .	Number	 00000018h   
??0057 . . . . . . . . . . . . .	Number	 00000000h   
??0058 . . . . . . . . . . . . .	Byte	 0000040C _DATA	
??0060 . . . . . . . . . . . . .	Number	 00000001h   
??0062 . . . . . . . . . . . . .	Number	 00000000h   
??0063 . . . . . . . . . . . . .	Byte	 0000040F _DATA	
??0065 . . . . . . . . . . . . .	Byte	 0000053E _DATA	
??0066 . . . . . . . . . . . . .	Byte	 00000412 _DATA	
??0067 . . . . . . . . . . . . .	Text   	 o
??0068 . . . . . . . . . . . . .	Byte	 00000411 _DATA	
??006B . . . . . . . . . . . . .	Number	 00000017h   
??006C . . . . . . . . . . . . .	Number	 00000018h   
??006D . . . . . . . . . . . . .	Number	 00000000h   
??006E . . . . . . . . . . . . .	Byte	 00000541 _DATA	
??0076 . . . . . . . . . . . . .	Number	 00000001h   
??0078 . . . . . . . . . . . . .	Number	 00000000h   
??0079 . . . . . . . . . . . . .	Byte	 00000544 _DATA	
??007B . . . . . . . . . . . . .	Byte	 00000673 _DATA	
??007C . . . . . . . . . . . . .	Byte	 00000547 _DATA	
??007D . . . . . . . . . . . . .	Text   	 o
??007E . . . . . . . . . . . . .	Byte	 00000546 _DATA	
??0081 . . . . . . . . . . . . .	Byte	 00000677 _DATA	
??0082 . . . . . . . . . . . . .	Text   	 o
??0083 . . . . . . . . . . . . .	Byte	 00000676 _DATA	
??0084 . . . . . . . . . . . . .	L Near	 000003E1 _TEXT	
??0085 . . . . . . . . . . . . .	L Near	 00000417 _TEXT	
??0086 . . . . . . . . . . . . .	Number	 00000000h   
??0087 . . . . . . . . . . . . .	Byte	 000007A3 _DATA	
??0089 . . . . . . . . . . . . .	Byte	 000008D2 _DATA	
??008A . . . . . . . . . . . . .	Byte	 000007A6 _DATA	
??008B . . . . . . . . . . . . .	Text   	 o
??008C . . . . . . . . . . . . .	Byte	 000007A5 _DATA	
??008D . . . . . . . . . . . . .	L Near	 0000046E _TEXT	
??008E . . . . . . . . . . . . .	L Near	 000004A4 _TEXT	
??008F . . . . . . . . . . . . .	Byte	 000008D5 _DATA	
??0090 . . . . . . . . . . . . .	Number	 00000000h   
??0091 . . . . . . . . . . . . .	Byte	 000008D8 _DATA	
??0093 . . . . . . . . . . . . .	Byte	 00000A07 _DATA	
??0094 . . . . . . . . . . . . .	Byte	 000008DB _DATA	
??0095 . . . . . . . . . . . . .	Text   	 o
??0096 . . . . . . . . . . . . .	Byte	 000008DA _DATA	
??0097 . . . . . . . . . . . . .	L Near	 000004D9 _TEXT	
??0098 . . . . . . . . . . . . .	L Near	 0000050F _TEXT	
??0099 . . . . . . . . . . . . .	Byte	 00000A16 _DATA	
??009A . . . . . . . . . . . . .	Byte	 00000A0B _DATA	
??009B . . . . . . . . . . . . .	Text   	 "
??009C . . . . . . . . . . . . .	Byte	 00000A0A _DATA	
??009E . . . . . . . . . . . . .	L Near	 00000581 _TEXT	
??009F . . . . . . . . . . . . .	Byte	 00000A21 _DATA	
??00A0 . . . . . . . . . . . . .	Byte	 00000A1A _DATA	
??00A1 . . . . . . . . . . . . .	Text   	 "
??00A2 . . . . . . . . . . . . .	Byte	 00000A19 _DATA	
??00A4 . . . . . . . . . . . . .	L Near	 000005C1 _TEXT	
??00A5 . . . . . . . . . . . . .	Byte	 00000A24 _DATA	
??00A6 . . . . . . . . . . . . .	Number	 00000000h   
??00A7 . . . . . . . . . . . . .	Byte	 00000A27 _DATA	
??00A9 . . . . . . . . . . . . .	Byte	 00000B56 _DATA	
??00AA . . . . . . . . . . . . .	Byte	 00000A2A _DATA	
??00AB . . . . . . . . . . . . .	Text   	 o
??00AC . . . . . . . . . . . . .	Byte	 00000A29 _DATA	
??00AD . . . . . . . . . . . . .	L Near	 00000605 _TEXT	
??00AE . . . . . . . . . . . . .	L Near	 0000063B _TEXT	
??00AF . . . . . . . . . . . . .	Byte	 00000B66 _DATA	
??00B0 . . . . . . . . . . . . .	Byte	 00000B5A _DATA	
??00B1 . . . . . . . . . . . . .	Text   	 "
??00B2 . . . . . . . . . . . . .	Byte	 00000B59 _DATA	
??00B4 . . . . . . . . . . . . .	L Near	 00000686 _TEXT	
??00B5 . . . . . . . . . . . . .	Byte	 00000B69 _DATA	
??00B6 . . . . . . . . . . . . .	Number	 00000000h   
??00B7 . . . . . . . . . . . . .	Byte	 00000B6C _DATA	
??00B9 . . . . . . . . . . . . .	Byte	 00000C9B _DATA	
??00BA . . . . . . . . . . . . .	Byte	 00000B6F _DATA	
??00BB . . . . . . . . . . . . .	Text   	 o
??00BC . . . . . . . . . . . . .	Byte	 00000B6E _DATA	
??00BD . . . . . . . . . . . . .	L Near	 000006B8 _TEXT	
??00BE . . . . . . . . . . . . .	L Near	 000006EE _TEXT	
??00BF . . . . . . . . . . . . .	Byte	 00000C9E _DATA	
??00C0 . . . . . . . . . . . . .	Number	 00000000h   
??00C1 . . . . . . . . . . . . .	Byte	 00000CA1 _DATA	
??00C3 . . . . . . . . . . . . .	Byte	 00000DD0 _DATA	
??00C4 . . . . . . . . . . . . .	Byte	 00000CA4 _DATA	
??00C5 . . . . . . . . . . . . .	Text   	 o
??00C6 . . . . . . . . . . . . .	Byte	 00000CA3 _DATA	
??00C7 . . . . . . . . . . . . .	L Near	 0000076E _TEXT	
??00C8 . . . . . . . . . . . . .	L Near	 000007A4 _TEXT	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Arr_of_Rec . . . . . . . . . . .	Date_pack  00000040 _DATA	
Arr_of_Struc . . . . . . . . . .	Date_unpack  0000004C _DATA	
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
D1 . . . . . . . . . . . . . . .	Date_pack  0000003C _DATA	
D2 . . . . . . . . . . . . . . .	Date_pack  0000003E _DATA	
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
L1 . . . . . . . . . . . . . . .	L Near	 00000440 _TEXT	
L2 . . . . . . . . . . . . . . .	L Near	 00000532 _TEXT	
L41  . . . . . . . . . . . . . .	L Near	 0000072D _TEXT	
L4 . . . . . . . . . . . . . . .	L Near	 0000070A _TEXT	
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
L  . . . . . . . . . . . . . . .	L Near	 00000426 _TEXT	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
N  . . . . . . . . . . . . . . .	Number	 00000006h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Pause  . . . . . . . . . . . . .	Text   	 pause
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
T  . . . . . . . . . . . . . . .	Byte	 00000019 _DATA	
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
con  . . . . . . . . . . . . . .	L Near	 0000043B _TEXT	
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
f4 . . . . . . . . . . . . . . .	L Near	 00000728 _TEXT	
ff4  . . . . . . . . . . . . . .	L Near	 00000742 _TEXT	
fffin  . . . . . . . . . . . . .	L Near	 000005D4 _TEXT	
ffin . . . . . . . . . . . . . .	L Near	 000004BA _TEXT	
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
noo  . . . . . . . . . . . . . .	L Near	 00000556 _TEXT	
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
start  . . . . . . . . . . . . .	L Near	 000003CF _TEXT	Public STDCALL
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   
yess . . . . . . . . . . . . . .	L Near	 00000596 _TEXT	

	   0 Warnings
	   0 Errors
