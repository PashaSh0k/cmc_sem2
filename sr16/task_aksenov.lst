Microsoft (R) Macro Assembler Version 6.14.8444		    05/17/21 16:02:31
task_aksenov.asm					     Page 1 - 1


				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; Исключение из списка служебных слов
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 

				COMMENT ~

				САМОСТОЯТЕЛЬНАЯ РАБОТА 16
				Аксенов Павел    110 группа

				~
				COMMENT~ 
				----------------------------------------------------------------------------
				ВНИМАНИЕ: ВСЕ ИСПОЛЬЗУЕМЫЕ ОПИСАНИЯ ПЕРЕМЕННЫХ и КОНСТАНТ ДАЮТСЯ В СЕКЦИИ
				ДАННЫХ ЭТОЙ ПРОГРАММЫ !!!
				---------------------------------------------------------------------------- 
				 ЗАДАЧА (максимально 60 очков), время выполнения 90 минут
				 
				 Описать функцию Search(Str1,Str2,n,k), где Str1 и Str2 - символьные строки
				 фиксированной длины из n (n>0) символов каждая, k - число из диапазона 
				 от 1 до n. Функция определяет, входят ли первые k символов строки Str2 
				 в строку Str1 как ПОДСТРОКА. 
				 Если ДА, то возвращает через регистр EAX номер позиции (в Str1), начиная 
				 с которой найдено первое вхождение ПОДСТРОКИ (позиции нумеруются с НУЛЯ!).
				 Если НЕТ, то возвращает через ЕАХ ответ -1 (минус единицу).
				 
				 Требования. 
				 ----------
				 1) Параметры Str1 и Str2 должны быть переданы по ссылке, параметры n и k - 
				 по значению (+ cтандартные соглашения о связях stdcall).
				  
				 2) Применить функцию Search(Str1,Str2,n,k) к следующим данным:
				 Search(S1,S2,n,k)
				 (описание имён S1, S2, n и k приведено ниже в секции данных)
				 Значение для k следует предварительно ввести с клавиатуры.
				 Найденное значение индекса (которое возвращается через ЕАХ) - 
				 напечатать из основной программы после вызова функции Search
				 
				 3) Требование: в решении использовать команду cmpsb в паре с нужным 
				 префиксом повторения для поиска подстроки (при очередной попытке). 
				 
				 См. КОММЕНТАРИЙ в конце (после директивы end) про УПРОЩЁННУЮ ПОСТАНОВКУ
				 этой задачи, но на 30 очков (если в ИСХОДНОЙ ПОСТАНОВКЕ задачу решить сложно)
				  
				 Примеры работы программы для S1 и S2 с описанными (в .data) значениями
				 (для тестирования процедуры Search):
				 k = 1   i = 0
				 k = 2   i = 0
				 k = 3   i = 2
				 k = 4   i = 5
				 k = 5   i = 9
				 k = 6   i = 17
				 k = 11  i = 17
				 k = 28  i = -1
				 Здесь значение для k запрашивается программой и вводится с клавиатуры, 
				 значение для i (индекса вхождения) - вычисляется и печатается на экран.

				Отправить НА ПРОВЕРКУ в следующем виде:
				Если программа доведена до работоспособного состояния (выдаёт правильные
				результаты, как в вышеприведённых тестах) - прислать zip-архив с файлами: 
				asm, lst и exe по этой программе + СКРИНШОТ ЭКРАНА с результатами работы
				вашей программы на всех вышеприведённых тестах. Если же программа не работает
				или не дописана до конца - поместить в архив только файл Task_sername.asm.
				Внимание! Замените в названии файла слово Sername на свою фамилию на 
				английском языке. Если вы решили задачу в исходной постановке, то ничего
				не меняйте в строке 67 (где определена переменная Т). Если вы решили задачу
				в упрощённой постановке, то  укажите какой УПРОЩЁННЫЙ вариант вы сдаёте.
				~
 00000019			.data
 00000019 C7 E0 E4 E0 F7	T   db  "Задача (с-р 16) Аксенов 110 (ИСХОДНАЯ постановка)",0
	   E0 20 28 F1 2D
	   F0 20 31 36 29
	   20 C0 EA F1 E5
	   ED EE E2 20 31
	   31 30 20 28 C8
	   D1 D5 CE C4 CD
	   C0 DF 20 EF EE
	   F1 F2 E0 ED EE
	   E2 EA E0 29 00

 0000004B 61 62 61 62 63	S1  db "ababcabcdabcdelmnabcdefghijk"
	   61 62 63 64 61
	   62 63 64 65 6C
	   6D 6E 61 62 63
	   64 65 66 67 68
	   69 6A 6B
 00000067 61 62 63 64 65	S2  db "abcdefghijklmnopqrstuvwxyzab"
	   66 67 68 69 6A
	   6B 6C 6D 6E 6F
	   70 71 72 73 74
	   75 76 77 78 79
	   7A 61 62

 00000083 = 0000001C		n   equ ($-S2)                ; длина одной строки (=28)
 00000083 00			k   db ?                      ; длина искомой подстроки (1..n)

 00000000			.code
				; procedure Search(var Str1, Str2: array of byte; n, k: longword)
 00000000			Search proc
				;   [EBP+8]  - адрес Str1
				;   [EBP+12] - адрес Str2
				;   [EBP+16] - значение n
				;   [EBP+20] - значение k
				;   ДАЛЕЕ ВАШЕ РЕШЕНИЕ 
 00000000  55			    push EBP
 00000001  8B EC		    mov EBP, ESP
 00000003  53			    push EBX
 00000004  51			    push ECX
 00000005  52			    push EDX
 00000006  56			    push ESI
 00000007  57			    push EDI
				    
 00000008  FC			    cld
 00000009  8B 4D 10		    mov ECX, [EBP+16]
 0000000C  2B 4D 14		    sub ECX, [EBP+20]
 0000000F  33 D2		    xor EDX, EDX
 00000011			@cycle:
 00000011  3B D1		    cmp EDX, ECX
 00000013  77 14		    jA @no
 00000015  8B 75 08		    mov ESI, [EBP+8]
 00000018  8B 7D 0C		    mov EDI, [EBP+12]
 0000001B  03 F2		    add ESI, EDX
 0000001D  51			    push ECX
 0000001E  8B 4D 14		    mov ECX, [EBP+20]
 00000021  F3/ A6		    repE cmpsb
 00000023  59			    pop ECX
 00000024  74 0A		    jZ @yes
 00000026  42			    inc EDX
 00000027  EB E8		    jmp @cycle
 00000029			@no:   
 00000029  B8 FFFFFFFF		    mov EAX, -1
 0000002E  EB 02		    jmp @fin
 00000030			@yes:
 00000030  8B C2		    mov EAX, EDX
 00000032			@fin:
 00000032  5F			    pop EDI
 00000033  5E			    pop ESI
 00000034  5A			    pop EDX
 00000035  59			    pop ECX
 00000036  5B			    pop EBX
 00000037  5D			    pop EBP
 00000038  C2 0010		    ret 4*4
 0000003B			Search endp
				 
 0000003B			Start:
				    ConsoleTitle offset T	
				    ; считать, что значение для k будет введено корректно (от 1 до n)
				    inint k,"k = "
 000000EE  0F B6 05		    movzx EAX, k
	   00000083 R
 000000F5  8D 0D 0000004B R	    lea ECX, S1
 000000FB  8D 15 00000067 R	    lea EDX, S2
 00000101  50			    push EAX
 00000102  68 0000001C		    push n
 00000107  52			    push EDX
 00000108  51			    push ECX
 00000109  E8 FFFFFEF2		    call Search
				    outint EAX,, 'i = '
				; ДАЛЕЕ ПРИМЕНЕНИЕ ВАШЕЙ ПРОЦЕДУРЫ (в соответствие с выбранной постановкой):
				; НЕ ЗАБУДЬТЕ В СТРОКЕ 67 УКАЗАТЬ (В СКОБКАХ) КАКАЯ ПОСТАНОВКА ЗАДАЧИ ВЫБРАНА
				    
				; ЕСЛИ ПРОГРАММА РАБОТАЕТ ВЕРНО, НЕ ЗАБУДЬТЕ ПОМЕСТИТЬ В АРХИВ СКРИНШОТЫ 
				; РЕЗУЛЬТАТОВ РАБОТЫ ПРОГРАММЫ ПО ВСЕМ ТЕСТАМ (СТРОКИ 44-51) 
				    pause						; нужно при сдаче по e-mail
				    exit						
				end Start
				-------------------------------------------------------------------
				КОММЕНТАРИЙ (упрощённая постановка задачи - на 30 очков вместо 60):
				-------------------------------------------------------------------
				Упрощённый вариант_1:
				Если сложно вычислить индекс первого вхождения, то можно дать ответ в 
				более простом варианте:
				Если ДА (входит), то возвращает через регистр EAX значение 0 (ноль).
				Если НЕТ (не входит), то возвращает через ЕАХ ответ -1 (минус единицу).
				Указать (обязательно!) в строке 67 при описании переменной Т, что 
				выбрана более простая постановка задачи в упрощённом варианте_1
				(для облегчения проверки). 
				-------------------------------------------------------------------
				Упрощённый вариант_2:
				Если не знаете как использовать команду cmpsb в паре с нужным префиксом
				повторения для поиска подстроки (при очередной попытке), то решайте как 
				можете (без строковых команд), но тогда за это максимум 30 очков.
				Указать (обязательно!) в строке 67 при описании переменной Т, что 
				выбрана более простая постановка задачи в упрощённом варианте_2
				(для облегчения проверки). 
				-------------------------------------------------------------------


 
Microsoft (R) Macro Assembler Version 6.14.8444		    05/17/21 16:02:31
task_aksenov.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002FF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001EA Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Search . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000003B Public STDCALL
  @cycle . . . . . . . . . . . .	L Near	 00000011 _TEXT	
  @no  . . . . . . . . . . . . .	L Near	 00000029 _TEXT	
  @yes . . . . . . . . . . . . .	L Near	 00000030 _TEXT	
  @fin . . . . . . . . . . . . .	L Near	 00000032 _TEXT	
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000085 _DATA	
??0001 . . . . . . . . . . . . .	Text   	 o
??0002 . . . . . . . . . . . . .	Byte	 00000084 _DATA	
??0003 . . . . . . . . . . . . .	L Near	 0000004D _TEXT	
??0004 . . . . . . . . . . . . .	L Near	 00000083 _TEXT	
??0005 . . . . . . . . . . . . .	Number	 00000000h   
??0006 . . . . . . . . . . . . .	DWord	 000001B1 _DATA	
??0007 . . . . . . . . . . . . .	Byte	 000001BB _DATA	
??0008 . . . . . . . . . . . . .	Byte	 000001B6 _DATA	
??0009 . . . . . . . . . . . . .	Text   	 "
??000A . . . . . . . . . . . . .	Byte	 000001B5 _DATA	
??000C . . . . . . . . . . . . .	L Near	 000000B8 _TEXT	
??000D . . . . . . . . . . . . .	Number	 00000001h   
??000E . . . . . . . . . . . . .	Number	 00000002h   
??000F . . . . . . . . . . . . .	Number	 00000000h   
??0010 . . . . . . . . . . . . .	Byte	 000001C7 _DATA	
??0018 . . . . . . . . . . . . .	Number	 00000004h   
??001A . . . . . . . . . . . . .	Byte	 000001C4 _DATA	
??001B . . . . . . . . . . . . .	Byte	 000001BF _DATA	
??001C . . . . . . . . . . . . .	Text   	 "
??001D . . . . . . . . . . . . .	Byte	 000001BE _DATA	
??001F . . . . . . . . . . . . .	L Near	 00000139 _TEXT	
??0020 . . . . . . . . . . . . .	Byte	 000001CA _DATA	
??0021 . . . . . . . . . . . . .	Number	 00000000h   
??0022 . . . . . . . . . . . . .	Byte	 000001CD _DATA	
??0024 . . . . . . . . . . . . .	Byte	 000002FC _DATA	
??0025 . . . . . . . . . . . . .	Byte	 000001D0 _DATA	
??0026 . . . . . . . . . . . . .	Text   	 o
??0027 . . . . . . . . . . . . .	Byte	 000001CF _DATA	
??0028 . . . . . . . . . . . . .	L Near	 00000191 _TEXT	
??0029 . . . . . . . . . . . . .	L Near	 000001C7 _TEXT	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Pause  . . . . . . . . . . . . .	Text   	 pause
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
S1 . . . . . . . . . . . . . . .	Byte	 0000004B _DATA	
S2 . . . . . . . . . . . . . . .	Byte	 00000067 _DATA	
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
Start  . . . . . . . . . . . . .	L Near	 0000003B _TEXT	Public STDCALL
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
T  . . . . . . . . . . . . . . .	Byte	 00000019 _DATA	
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
k  . . . . . . . . . . . . . . .	Byte	 00000083 _DATA	
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
n  . . . . . . . . . . . . . . .	Number	 0000001Ch   
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
